#include <iostream>
#include <limits>

int main() {
    // данные типы имеют ограничение в размере от компилятора, заданные его разработчиками
    // стандарт устанавливает исключительно минимальные значения, в то время как максимальных не существует
    // собственно поэтому, и только по этому существуют ограничения в размере переменных
    // но размер можно увеличить в положительную сторону используя перед объявлением типа приставку unsigned
    // это не позволит использовать отрицательные значения, но всё место занятое под них отдаст положительным    

    std::cout << "Short: " << std::numeric_limits<short>::min() << ".." << std::numeric_limits<short>::max()<< std::endl;
    // Int может принимать такие же значения как и Short но комплятор VS предостовляет
    // 4 байта памяти вместо 2 байт у шорта, в связи с чем значения принимаемые int гораздо больше
    std::cout << "Int: " << std::numeric_limits<int>::min() << ".." << std::numeric_limits<int>::max() << std::endl;
    // long имеет постоянную общепринятую в компиляторах велечину в 4 байта
    std::cout << "long: " << std::numeric_limits<long>::min() << ".." << std::numeric_limits<long>::max() << std::endl;
    // long long занимает 8 байт в памяти, и позволяет в себе хранить значения до 9 квинтильонов
    std::cout << "long long: " << std::numeric_limits<long long>::min() << ".." << std::numeric_limits<long long>::max() << std::endl;
    system("pause");
    return 0;
}
